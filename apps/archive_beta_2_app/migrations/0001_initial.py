# Generated by Django 4.1.5 on 2023-03-17 20:57

import apps.archive_beta_2_app.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='NextDateToCheckEpisodes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('next_date_to_check_episodes', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='StorageSpace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drive_name', models.CharField(max_length=200)),
                ('drive_path', models.CharField(max_length=200)),
                ('drive_type', models.CharField(choices=[('NVME', 'NVME'), ('HDD', 'HDD'), ('SSD', 'SSD'), ('SAS', 'SAS')], default='HDD', max_length=20)),
                ('drive_space', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('hidden', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='TvShow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(choices=[('Movie', 'Movie'), ('Tv-Show', 'Tv-Show')], max_length=20)),
                ('unique_id', models.SlugField(max_length=250, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('size', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('total_seasons', models.PositiveIntegerField(default=0)),
                ('ended', models.BooleanField(default=False)),
                ('imdb_id', models.CharField(max_length=50, validators=[django.core.validators.MinLengthValidator(1, 'Must contain at least 1 characters!')])),
                ('tmdb_id', models.PositiveIntegerField()),
                ('tvdb_id', models.PositiveIntegerField()),
                ('last_watched_date', models.DateField(blank=True, null=True)),
                ('last_watched_season', models.IntegerField(blank=True, null=True)),
                ('last_watched_episode', models.IntegerField(blank=True, null=True)),
                ('watched', models.BooleanField()),
                ('next_poster_check_date', models.DateField()),
                ('poster_file', models.ImageField(default='posters/placeholder.png', upload_to='posters')),
                ('unacquired', models.BooleanField(default=False)),
                ('storage_space', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='storage_space_tv_show', to='archive_beta_2_app.storagespace')),
            ],
            bases=(models.Model, apps.archive_beta_2_app.models.GeneralProperties, apps.archive_beta_2_app.models.TvShowProperties),
        ),
        migrations.CreateModel(
            name='TvShowSeason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('size', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('exact_resolution', models.CharField(max_length=20)),
                ('general_resolution', models.CharField(choices=[('480p', '480p'), ('720p', '720p'), ('1080i', '1080i'), ('1080p', '1080p'), ('2160p', '2160p')], max_length=20)),
                ('rip_type', models.CharField(choices=[('webrip', 'WebRip'), ('webdl', 'WebDL'), ('bluray_encode', 'BluRay Encode'), ('remux', 'Remux')], max_length=20)),
                ('hdr_dv', models.CharField(choices=[('none', 'None'), ('hdr_dv', 'HDR-DV'), ('hdr', 'HDR'), ('dv', 'DV')], max_length=20)),
                ('dtsx_atmos', models.CharField(choices=[('none', 'None'), ('dtsx_dolbyatmos', 'DTS:X - DolbyAtmos'), ('dtsx', 'DTS:X'), ('dolbyatmos', 'DolbyAtmos')], max_length=20)),
                ('video', models.CharField(max_length=1000, validators=[django.core.validators.MinLengthValidator(5, 'Must contain at least 5 characters!')])),
                ('audio', models.CharField(max_length=1000, validators=[django.core.validators.MinLengthValidator(5, 'Must contain at least 5 characters!')])),
                ('season', models.PositiveIntegerField()),
                ('tv_show', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tv_show', to='archive_beta_2_app.tvshow')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NewEpisodes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season', models.PositiveIntegerField()),
                ('episode', models.PositiveIntegerField()),
                ('aired', models.DateField(blank=True, null=True)),
                ('tv_show_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tv_show_id', to='archive_beta_2_app.tvshow')),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('size', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('exact_resolution', models.CharField(max_length=20)),
                ('general_resolution', models.CharField(choices=[('480p', '480p'), ('720p', '720p'), ('1080i', '1080i'), ('1080p', '1080p'), ('2160p', '2160p')], max_length=20)),
                ('rip_type', models.CharField(choices=[('webrip', 'WebRip'), ('webdl', 'WebDL'), ('bluray_encode', 'BluRay Encode'), ('remux', 'Remux')], max_length=20)),
                ('hdr_dv', models.CharField(choices=[('none', 'None'), ('hdr_dv', 'HDR-DV'), ('hdr', 'HDR'), ('dv', 'DV')], max_length=20)),
                ('dtsx_atmos', models.CharField(choices=[('none', 'None'), ('dtsx_dolbyatmos', 'DTS:X - DolbyAtmos'), ('dtsx', 'DTS:X'), ('dolbyatmos', 'DolbyAtmos')], max_length=20)),
                ('video', models.CharField(max_length=1000, validators=[django.core.validators.MinLengthValidator(5, 'Must contain at least 5 characters!')])),
                ('audio', models.CharField(max_length=1000, validators=[django.core.validators.MinLengthValidator(5, 'Must contain at least 5 characters!')])),
                ('name', models.CharField(max_length=200)),
                ('type', models.CharField(choices=[('Movie', 'Movie'), ('Tv-Show', 'Tv-Show')], max_length=20)),
                ('unique_id', models.SlugField(max_length=250, unique=True)),
                ('tmdb_id', models.PositiveIntegerField()),
                ('imdb_id', models.CharField(max_length=20, validators=[django.core.validators.MinLengthValidator(1, 'Must contain at least 1 characters!')])),
                ('last_watched_date', models.DateField(blank=True, null=True)),
                ('watched', models.BooleanField()),
                ('next_poster_check_date', models.DateField()),
                ('poster_file', models.ImageField(default='posters/placeholder.png', upload_to='posters')),
                ('unacquired', models.BooleanField(default=False)),
                ('storage_space', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='storage_space_movie', to='archive_beta_2_app.storagespace')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, apps.archive_beta_2_app.models.GeneralProperties, apps.archive_beta_2_app.models.MovieProperties),
        ),
    ]
